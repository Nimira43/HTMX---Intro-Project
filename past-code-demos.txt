Demo 1 - Button Links

<button
    hx-get="https://html-mock.fly.dev/gist/5962aa323f41d88bcdff041fee0304e3#file-hello-htmx-html"
    hx-target="#result"
    >Submit</button>
<button 
    hx-get='https://html-mock.fly.dev/tag/table?class=table%20table-bordered'
    > Get </button>
<button 
    hx-get='https://html-mock.fly.dev/gist/c9fd72b8f8a265d8bfcdb4338ffc76fa'
    > Get Gist </button>
------------------------------------------------------------------
Demo 2 - Using POST and PUT

<form hx-post="https://html-mock.fly.dev/tag/paragraph" hx-target="#result">
    <label for="name">Enter Name</label>
    <input type="text" id="name">
    <input type="submit" value="Submit">
</form>
<form hx-put="https://html-mock.fly.dev/tag/paragraph" hx-target="#result2">
    <label for="email">Enter Email</label>
    <input type="email" id="email">
    <input type="submit" value="Submit">
</form>
------------------------------------------------------------------
Demo 3 - Trigger Events

<div style="height: 1550px"></div>
<div 
    hx-get="https://html-mock.fly.dev/tag/paragraph" hx-target="#result"
    hx-trigger="revealed"
>
    Get Info

    <!-- Use cases for hx-trigger -->

    <!-- hx-trigger="intersect" -->
    <!-- hx-trigger="load" -->
    <!-- hx-trigger="click[ctrlKey]" -->
    <!-- hx-trigger="mouseenter once" -->
    <!-- hx-trigger="mouseenter delay:5s" -->
    <!-- hx-trigger="mouseenter throttle:5s" -->

</div>
------------------------------------------------------------------
Demo 4 - Express Basic Server

import express from 'express'
import { dirname } from 'path'   
import { fileURLToPath } from 'url'

const app = express()
const PORT = 3000

app.get('/', (req, res) => {
    res.sendFile(`${dirname(fileURLToPath(import.meta.url))}/index.html`)
})

app.listen(PORT, () => {
    console.log(`Server is listening on ${PORT}`)
})

htmx

<div
        hx-get="https://html-mock.fly.dev/tag/paragraph"
        hx-target="#result"
    >
        Working and Online
    </div>
    <div id="result"></div>
------------------------------------------------------------------
Demo 5 - Long Polling

app.get('/content', (req, res) => {
    count++
    if (count > 5) {
        count = 0
        return res.status(286)
    }
    // If statement will stop request from client 

    res.send('<h2>Content from /content</h2>')
})

htmx

<div
        hx-get="/content"
        hx-target="#result"
        hx-trigger="every 2s" 
    >
        Working and Online
    </div>
    
    <!-- 
        Notes:

        hx-trigger="every 2s" - This sends client-sided requests every 2 seconds. Kind of like a Ping request
     -->
</div>
------------------------------------------------------------------
Demo 6 - Request Indicators

import express from 'express'
import { dirname } from 'path'   
import { fileURLToPath } from 'url'

const app = express()
const PORT = 3000 

app.use(express.static(`${dirname(fileURLToPath(import.meta.url))}/public`))

app.get('/', (req, res) => {
    res.sendFile(`${dirname(fileURLToPath(import.meta.url))}/index.html`)
})

app.get('/indicator', (req, res) => {
    setTimeout(() => {
        res.send('<h2>Request Indicator</h2>')
    }, 3000)
})

app.listen(PORT, () => {
    console.log(`Server is listening on ${PORT}`)
})

htmx

<button 
    hx-get="/indicator"
    hx-target="#result"
    hx-indicator="#indicator"
    hx-disabled-elt="this"
>
    Request Indicator
</button>

<div 
    id="indicator"
    class="htmx-indicator"
    style="background-color: red;"
>
    <img src="assets/icon.ico">
</div>    